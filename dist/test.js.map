{"version":3,"sources":["webpack://test/webpack/bootstrap","webpack://test/./node_modules/midi-writer-js/build/index.js","webpack://test/./node_modules/fast-unique-numbers/build/es5/bundle.js","webpack://test/./node_modules/buffer/index.js","webpack://test/(webpack)/buildin/global.js","webpack://test/./node_modules/base64-js/index.js","webpack://test/./node_modules/ieee754/index.js","webpack://test/./node_modules/isarray/index.js","webpack://test/./node_modules/process/browser.js","webpack://test/./node_modules/broker-factory/build/es2018/guards/message-port.js","webpack://test/./node_modules/broker-factory/build/es2018/helpers/port-map.js","webpack://test/./node_modules/broker-factory/build/es2018/module.js","webpack://test/./node_modules/midi-json-parser-broker/build/es2018/module.js","webpack://test/./node_modules/broker-factory/build/es2018/helpers/extend-broker-implementation.js","webpack://test/./node_modules/midi-json-parser/build/es2018/module.js","webpack://test/./node_modules/midi-json-parser/build/es2018/worker/worker.js","webpack://test/./src/test.ts","webpack://test/./node_modules/note-parser/index.js","webpack://test/./node_modules/tonal-midi/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Buffer","process","tonalMidi","Constants","VERSION","version","HEADER_CHUNK_TYPE","HEADER_CHUNK_LENGTH","HEADER_CHUNK_FORMAT0","HEADER_CHUNK_FORMAT1","HEADER_CHUNK_DIVISION","TRACK_CHUNK_TYPE","META_EVENT_ID","META_TEXT_ID","META_COPYRIGHT_ID","META_TRACK_NAME_ID","META_INSTRUMENT_NAME_ID","META_LYRIC_ID","META_MARKER_ID","META_CUE_POINT","META_TEMPO_ID","META_SMTPE_OFFSET","META_TIME_SIGNATURE_ID","META_KEY_SIGNATURE_ID","META_END_OF_TRACK_ID","CONTROLLER_CHANGE_STATUS","PROGRAM_CHANGE_STATUS","_typeof","obj","iterator","constructor","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","length","descriptor","configurable","writable","_createClass","protoProps","staticProps","Utils$1","Utils","this","string","split","map","char","charCodeAt","isNaN","parseFloat","isFinite","pitch","toMidi","ticks","buffer","bList","push","encodeURI","bytes","stringResult","hex","forEach","byte","toString","parseInt","number","bytesNeeded","hexString","hexArray","match","item","unshift","Array","isArray","velocity","Math","round","duration","getTickDuration","reduce","a","b","toLowerCase","charAt","substring","quarterTicks","numberFromBytes","getDurationMultiplier","NoteOnEvent","fields","assign","channel","startTick","wait","type","midiNumber","getPitch","tick","delta","data","track","tickPointer","numberToVariableLength","concat","getStatusByte","convertVelocity","NoteOffEvent","noteOnTick","NoteEvent","repeat","sequential","toArray","grace","tickDuration","restDuration","events","_this","noteEvent","j","noteOnNew","noteOffNew","CopyrightEvent","text","textBytes","stringToBytes","CuePointEvent","EndTrackEvent","InstrumentNameEvent","KeySignatureEvent","sf","mi","_sflen","note","toUpperCase","fifthindex","indexOf","numberToBytes","LyricEvent","MarkerEvent","TempoEvent","bpm","tempo","TextEvent","TimeSignatureEvent","numerator","denominator","midiclockspertick","notespermidiclock","log2","TrackNameEvent","Track","size","explicitTickEvents","mapFunction","event","properties","buildData","e","_this2","removeEventsByType","addEvent","eventIndex","mergeExplicitTickEvents","_this3","sort","mergeSingleEvent","_this4","lastEventIndex","splicedEventIndex","splice","eventType","_this5","index","VexFlow","voice","pitches","tickables","tickable","noteType","keys","convertPitch","convertDuration","replace","isDotted","HeaderChunk","numberOfTracks","trackType","Writer","tracks","build","Uint8Array","btoa","String","fromCharCode","apply","buildFile","from","base64","stdout","write","filename","fs","writeFile","err","main","ControllerChangeEvent","controllerNumber","controllerValue","ProgramChangeEvent","instrument","LAST_NUMBER_WEAK_MAP","WeakMap","MAX_SAFE_INTEGER","undefined","Number","cache","collection","nextNumber","set","generateUniqueNumber","lastNumber","has","floor","random","Error","addUniqueNumber","add","factory","global","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","arg","encodingOrOffset","allocUnsafe","ArrayBuffer","array","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","encoding","isEncoding","actual","slice","fromString","isBuffer","len","checked","copy","val","fromObject","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","swap","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","arr","indexSize","arrLength","valLength","read","buf","readUInt16BE","foundIndex","found","hexWrite","offset","remaining","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","start","end","fromByteArray","utf8Slice","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","species","fill","allocUnsafeSlow","_isBuffer","compare","x","y","list","pos","swap16","swap32","swap64","arguments","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","max","join","thisStart","thisEnd","thisCopy","targetCopy","includes","toJSON","_arr","ret","out","toHex","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","stringtrim","base64clean","src","dst","g","Function","window","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","len2","encodeChunk","lookup","num","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","log","LN2","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","nextTick","args","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","PORT_MAP","ONGOING_REQUESTS","wrap","brokerImplementation","fullBrokerImplementation","partialBrokerImplementation","connect","async","port1","port2","MessageChannel","portId","port","disconnect","isSupported","extendBrokerImplementation","sender","ongoingRequests","Map","createOrGetOngoingRequests","addEventListener","message","id","reject","resolve","delete","error","result","isMessagePort","method","params","transferables","Promise","bundle","postMessage","notify","functions","handler","entries","[object Object]","createBroker","parseArrayBuffer","arrayBuffer","module_blob","Blob","url","URL","createObjectURL","midiJsonParser","worker","Worker","load","revokeObjectURL","__webpack_exports__","test1","test2","downloadTempTag","sampleInstruments","Synth","midi","notes","reverse","PlasticSynth","DefaultDrumSynth","kick","bass","snare","oh","ch","samplePlayData","instName","trackIndex","supportMusicScore","0","6","12","18","24","28","22","3","16","26","30","14","8","1","2","4","7","20","27","musicScoreKeys","10","5","13","19","21","23","25","29","playData","instrumentInfos","console","trackData","k","MidiWriter","setTempo","convert","restSum","node","ni","isEmptyNode","exportBlob","downloadMidi","blob","document","createElement","href","download","Date","toISOString","innerHTML","click","blobToArrayBuffer","done","reader","FileReader","readAsArrayBuffer","onloadend","then","json","isNum","midiToFreq","tuning","REGEX","SEMITONES","parse","isTonic","exec","letter","acc","pc","step","alt","chroma","oct","freq","tonicOf","isDef","FLATS","SHARPS","sharps"],"mappings":"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","file":"./test.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","'use strict';\n\nvar tonalMidi = require('tonal-midi');\n\n/**\n * MIDI file format constants.\n * @return {Constants}\n */\nvar Constants = {\n  VERSION: require('../package.json').version,\n  HEADER_CHUNK_TYPE: [0x4d, 0x54, 0x68, 0x64],\n  // Mthd\n  HEADER_CHUNK_LENGTH: [0x00, 0x00, 0x00, 0x06],\n  // Header size for SMF\n  HEADER_CHUNK_FORMAT0: [0x00, 0x00],\n  // Midi Type 0 id\n  HEADER_CHUNK_FORMAT1: [0x00, 0x01],\n  // Midi Type 1 id\n  HEADER_CHUNK_DIVISION: [0x00, 0x80],\n  // Defaults to 128 ticks per beat\n  TRACK_CHUNK_TYPE: [0x4d, 0x54, 0x72, 0x6b],\n  // MTrk,\n  META_EVENT_ID: 0xFF,\n  META_TEXT_ID: 0x01,\n  META_COPYRIGHT_ID: 0x02,\n  META_TRACK_NAME_ID: 0x03,\n  META_INSTRUMENT_NAME_ID: 0x04,\n  META_LYRIC_ID: 0x05,\n  META_MARKER_ID: 0x06,\n  META_CUE_POINT: 0x07,\n  META_TEMPO_ID: 0x51,\n  META_SMTPE_OFFSET: 0x54,\n  META_TIME_SIGNATURE_ID: 0x58,\n  META_KEY_SIGNATURE_ID: 0x59,\n  META_END_OF_TRACK_ID: [0x2F, 0x00],\n  CONTROLLER_CHANGE_STATUS: 0xB0,\n  // includes channel number (0)\n  PROGRAM_CHANGE_STATUS: 0xC0 // includes channel number (0)\n\n};\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\n/**\n * Holds all data for a \"controller change\" MIDI event\n * @param {object} fields {controllerNumber: integer, controllerValue: integer}\n * @return {ControllerChangeEvent}\n */\n\nvar ControllerChangeEvent = function ControllerChangeEvent(fields) {\n  _classCallCheck(this, ControllerChangeEvent);\n\n  this.type = 'controller'; // delta time defaults to 0.\n\n  this.data = Utils.numberToVariableLength(0x00).concat(Constants.CONTROLLER_CHANGE_STATUS, fields.controllerNumber, fields.controllerValue);\n};\n\n/**\n * Static utility functions used throughout the library.\n */\n\nvar Utils$1 =\n/*#__PURE__*/\nfunction () {\n  function Utils() {\n    _classCallCheck(this, Utils);\n  }\n\n  _createClass(Utils, null, [{\n    key: \"version\",\n\n    /**\n     * Gets MidiWriterJS version number.\n     * @return {string}\n     */\n    value: function version() {\n      return Constants.VERSION;\n    }\n    /**\n     * Convert a string to an array of bytes\n     * @param {string} string\n     * @return {array}\n     */\n\n  }, {\n    key: \"stringToBytes\",\n    value: function stringToBytes(string) {\n      return string.split('').map(function (char) {\n        return char.charCodeAt();\n      });\n    }\n    /**\n     * Checks if argument is a valid number.\n     * @param {*} n - Value to check\n     * @return {boolean}\n     */\n\n  }, {\n    key: \"isNumeric\",\n    value: function isNumeric(n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n    /**\n        * Returns the correct MIDI number for the specified pitch.\n        * Uses Tonal Midi - https://github.com/danigb/tonal/tree/master/packages/midi\n        * @param {(string|number)} pitch - 'C#4' or midi note code\n        * @return {number}\n        */\n\n  }, {\n    key: \"getPitch\",\n    value: function getPitch(pitch) {\n      return tonalMidi.toMidi(pitch);\n    }\n    /**\n     * Translates number of ticks to MIDI timestamp format, returning an array of\n     * hex strings with the time values. Midi has a very particular time to express time,\n     * take a good look at the spec before ever touching this function.\n     * Thanks to https://github.com/sergi/jsmidi\n     *\n     * @param {number} ticks - Number of ticks to be translated\n     * @return {array} - Bytes that form the MIDI time value\n     */\n\n  }, {\n    key: \"numberToVariableLength\",\n    value: function numberToVariableLength(ticks) {\n      var buffer = ticks & 0x7F;\n\n      while (ticks = ticks >> 7) {\n        buffer <<= 8;\n        buffer |= ticks & 0x7F | 0x80;\n      }\n\n      var bList = [];\n\n      while (true) {\n        bList.push(buffer & 0xff);\n        if (buffer & 0x80) buffer >>= 8;else {\n          break;\n        }\n      }\n\n      return bList;\n    }\n    /**\n     * Counts number of bytes in string\n     * @param {string} s\n     * @return {array}\n     */\n\n  }, {\n    key: \"stringByteCount\",\n    value: function stringByteCount(s) {\n      return encodeURI(s).split(/%..|./).length - 1;\n    }\n    /**\n     * Get an int from an array of bytes.\n     * @param {array} bytes\n     * @return {number}\n     */\n\n  }, {\n    key: \"numberFromBytes\",\n    value: function numberFromBytes(bytes) {\n      var hex = '';\n      var stringResult;\n      bytes.forEach(function (byte) {\n        stringResult = byte.toString(16); // ensure string is 2 chars\n\n        if (stringResult.length == 1) stringResult = \"0\" + stringResult;\n        hex += stringResult;\n      });\n      return parseInt(hex, 16);\n    }\n    /**\n     * Takes a number and splits it up into an array of bytes.  Can be padded by passing a number to bytesNeeded\n     * @param {number} number\n     * @param {number} bytesNeeded\n     * @return {array} - Array of bytes\n     */\n\n  }, {\n    key: \"numberToBytes\",\n    value: function numberToBytes(number, bytesNeeded) {\n      bytesNeeded = bytesNeeded || 1;\n      var hexString = number.toString(16);\n\n      if (hexString.length & 1) {\n        // Make sure hex string is even number of chars\n        hexString = '0' + hexString;\n      } // Split hex string into an array of two char elements\n\n\n      var hexArray = hexString.match(/.{2}/g); // Now parse them out as integers\n\n      hexArray = hexArray.map(function (item) {\n        return parseInt(item, 16);\n      }); // Prepend empty bytes if we don't have enough\n\n      if (hexArray.length < bytesNeeded) {\n        while (bytesNeeded - hexArray.length > 0) {\n          hexArray.unshift(0);\n        }\n      }\n\n      return hexArray;\n    }\n    /**\t\n     * Converts value to array if needed.\n     * @param {string} value\n     * @return {array}\n     */\n\n  }, {\n    key: \"toArray\",\n    value: function toArray(value) {\n      if (Array.isArray(value)) return value;\n      return [value];\n    }\n    /**\n     * Converts velocity to value 0-127\n     * @param {number} velocity - Velocity value 1-100\n     * @return {number}\n     */\n\n  }, {\n    key: \"convertVelocity\",\n    value: function convertVelocity(velocity) {\n      // Max passed value limited to 100\n      velocity = velocity > 100 ? 100 : velocity;\n      return Math.round(velocity / 100 * 127);\n    }\n  }, {\n    key: \"getTickDuration\",\n\n    /**\n     * Gets the total number of ticks of a specified duration.\n     * Note: type=='note' defaults to quarter note, type==='rest' defaults to 0\n     * @param {(string|array)} duration\n     * @return {number}\n     */\n    value: function getTickDuration(duration) {\n      if (Array.isArray(duration)) {\n        // Recursively execute this method for each item in the array and return the sum of tick durations.\n        return duration.map(function (value) {\n          return Utils.getTickDuration(value);\n        }).reduce(function (a, b) {\n          return a + b;\n        }, 0);\n      }\n\n      duration = duration.toString();\n\n      if (duration.toLowerCase().charAt(0) === 't') {\n        // If duration starts with 't' then the number that follows is an explicit tick count\n        return parseInt(duration.substring(1));\n      } // Need to apply duration here.  Quarter note == Constants.HEADER_CHUNK_DIVISION\n      // Rounding only applies to triplets, which the remainder is handled below\n\n\n      var quarterTicks = Utils.numberFromBytes(Constants.HEADER_CHUNK_DIVISION);\n      return Math.round(quarterTicks * Utils.getDurationMultiplier(duration));\n    }\n    /**\n     * Gets what to multiple ticks/quarter note by to get the specified duration.\n     * Note: type=='note' defaults to quarter note, type==='rest' defaults to 0\n     * @param {string} duration\n     * @return {number}\n     */\n\n  }, {\n    key: \"getDurationMultiplier\",\n    value: function getDurationMultiplier(duration) {\n      // Need to apply duration here.  Quarter note == Constants.HEADER_CHUNK_DIVISION\n      switch (duration) {\n        case '0':\n          return 0;\n\n        case '1':\n          return 4;\n\n        case '2':\n          return 2;\n\n        case 'd2':\n          return 3;\n\n        case '4':\n          return 1;\n\n        case '4t':\n          return 0.666;\n\n        case 'd4':\n          return 1.5;\n\n        case '8':\n          return 0.5;\n\n        case '8t':\n          // For 8th triplets, let's divide a quarter by 3, round to the nearest int, and substract the remainder to the last one.\n          return 0.33;\n\n        case 'd8':\n          return 0.75;\n\n        case '16':\n          return 0.25;\n\n        case '16t':\n          return 0.166;\n\n        case '32':\n          return 0.125;\n\n        case '64':\n          return 0.0625;\n\n        default: // Notes default to a quarter, rests default to 0\n        //return type === 'note' ? 1 : 0;\n\n      }\n\n      throw duration + ' is not a valid duration.';\n    }\n  }]);\n\n  return Utils;\n}();\n\n/**\n * Holds all data for a \"note on\" MIDI event\n * @param {object} fields {data: []}\n * @return {NoteOnEvent}\n */\n\nvar NoteOnEvent =\n/*#__PURE__*/\nfunction () {\n  function NoteOnEvent(fields) {\n    _classCallCheck(this, NoteOnEvent);\n\n    // Set default fields\n    fields = Object.assign({\n      channel: 1,\n      startTick: null,\n      velocity: 50,\n      wait: 0\n    }, fields);\n    this.type = 'note-on';\n    this.channel = fields.channel;\n    this.pitch = fields.pitch;\n    this.wait = fields.wait;\n    this.velocity = fields.velocity;\n    this.startTick = fields.startTick;\n    this.midiNumber = Utils$1.getPitch(this.pitch);\n    this.tick = null;\n    this.delta = null;\n    this.data = fields.data;\n  }\n  /**\n   * Builds int array for this event.\n   * @param {Track} track - parent track\n   * @return {NoteOnEvent}\n   */\n\n\n  _createClass(NoteOnEvent, [{\n    key: \"buildData\",\n    value: function buildData(track) {\n      this.data = []; // Explicitly defined startTick event\n\n      if (this.startTick) {\n        this.tick = this.startTick; // If this is the first event in the track then use event's starting tick as delta.\n\n        if (track.tickPointer == 0) {\n          this.delta = this.tick;\n        }\n      } else {\n        this.delta = Utils$1.getTickDuration(this.wait);\n        this.tick = track.tickPointer + this.delta;\n      }\n\n      this.data = Utils$1.numberToVariableLength(this.delta).concat(this.getStatusByte(), this.midiNumber, Utils$1.convertVelocity(this.velocity));\n      return this;\n    }\n    /**\n     * Gets the note on status code based on the selected channel. 0x9{0-F}\n     * Note on at channel 0 is 0x90 (144)\n     * 0 = Ch 1\n     * @return {number}\n     */\n\n  }, {\n    key: \"getStatusByte\",\n    value: function getStatusByte() {\n      return 144 + this.channel - 1;\n    }\n  }]);\n\n  return NoteOnEvent;\n}();\n\n/**\n * Holds all data for a \"note off\" MIDI event\n * @param {object} fields {data: []}\n * @return {NoteOffEvent}\n */\n\nvar NoteOffEvent =\n/*#__PURE__*/\nfunction () {\n  function NoteOffEvent(fields) {\n    _classCallCheck(this, NoteOffEvent);\n\n    // Set default fields\n    fields = Object.assign({\n      channel: 1,\n      noteOnTick: null,\n      velocity: 50\n    }, fields);\n    this.type = 'note-off';\n    this.channel = fields.channel;\n    this.pitch = fields.pitch;\n    this.duration = fields.duration;\n    this.velocity = fields.velocity;\n    this.noteOnTick = fields.noteOnTick;\n    this.midiNumber = Utils$1.getPitch(this.pitch);\n    this.tick = null;\n    this.delta = Utils$1.getTickDuration(this.duration);\n    this.data = fields.data;\n  }\n  /**\n   * Builds int array for this event.\n   * @param {Track} track - parent track\n   * @return {NoteOffEvent}\n   */\n\n\n  _createClass(NoteOffEvent, [{\n    key: \"buildData\",\n    value: function buildData(track) {\n      if (this.noteOnTick) {\n        this.tick = this.noteOnTick + Utils$1.getTickDuration(this.duration);\n      } else {\n        this.tick = this.delta + track.tickPointer;\n      }\n\n      this.data = Utils$1.numberToVariableLength(this.delta).concat(this.getStatusByte(), this.midiNumber, Utils$1.convertVelocity(this.velocity));\n      return this;\n    }\n    /**\n     * Gets the note off status code based on the selected channel. 0x8{0-F}\n     * Note off at channel 0 is 0x80 (128)\n     * 0 = Ch 1\n     * @return {number}\n     */\n\n  }, {\n    key: \"getStatusByte\",\n    value: function getStatusByte() {\n      return 128 + this.channel - 1;\n    }\n  }]);\n\n  return NoteOffEvent;\n}();\n\n/**\n * Wrapper for noteOnEvent/noteOffEvent objects that builds both events.\n * @param {object} fields - {pitch: '[C4]', duration: '4', wait: '4', velocity: 1-100}\n * @return {NoteEvent}\n */\n\nvar NoteEvent =\n/*#__PURE__*/\nfunction () {\n  function NoteEvent(fields) {\n    _classCallCheck(this, NoteEvent);\n\n    // Set default fields\n    fields = Object.assign({\n      channel: 1,\n      repeat: 1,\n      sequential: false,\n      startTick: null,\n      velocity: 50,\n      wait: 0\n    }, fields);\n    this.data = [];\n    this.type = 'note';\n    this.pitch = Utils$1.toArray(fields.pitch);\n    this.channel = fields.channel;\n    this.duration = fields.duration;\n    this.grace = fields.grace;\n    this.repeat = fields.repeat;\n    this.sequential = fields.sequential;\n    this.startTick = fields.startTick;\n    this.velocity = fields.velocity;\n    this.wait = fields.wait;\n    this.tickDuration = Utils$1.getTickDuration(this.duration);\n    this.restDuration = Utils$1.getTickDuration(this.wait);\n    this.events = []; // Hold actual NoteOn/NoteOff events\n  }\n  /**\n   * Builds int array for this event.\n   * @return {NoteEvent}\n   */\n\n\n  _createClass(NoteEvent, [{\n    key: \"buildData\",\n    value: function buildData() {\n      var _this = this;\n\n      // Reset data array\n      this.data = [];\n      var tickDuration = this.tickDuration;\n      var restDuration = this.restDuration; // Apply grace note(s) and subtract ticks (currently 1 tick per grace note) from tickDuration so net value is the same\n\n      if (this.grace) {\n        var graceDuration = 1;\n        this.grace = Utils$1.toArray(this.grace);\n        this.grace.forEach(function (pitch) {\n          var noteEvent = new NoteEvent({\n            pitch: _this.grace,\n            duration: 'T' + graceDuration\n          });\n          _this.data = _this.data.concat(noteEvent.data);\n          tickDuration -= graceDuration;\n        });\n      } // fields.pitch could be an array of pitches.\n      // If this.sequential === true then it's a sequential string of notes that requires separate NoteOnEvents.\n\n      if (!this.sequential) {\n        // Handle repeat\n        for (var j = 0; j < this.repeat; j++) {\n          // Note on\n          this.pitch.forEach(function (p, i) {\n            if (i == 0) {\n              var noteOnNew = new NoteOnEvent({\n                channel: _this.channel,\n                wait: _this.wait,\n                velocity: _this.velocity,\n                pitch: p,\n                startTick: _this.startTick\n              });\n            } else {\n              // Running status (can ommit the note on status)\n              //noteOn = new NoteOnEvent({data: [0, Utils.getPitch(p), Utils.convertVelocity(this.velocity)]});\n              var noteOnNew = new NoteOnEvent({\n                channel: _this.channel,\n                wait: 0,\n                velocity: _this.velocity,\n                pitch: p,\n                startTick: _this.startTick\n              });\n            }\n\n            _this.events.push(noteOnNew);\n          }); // Note off\n\n          this.pitch.forEach(function (p, i) {\n            if (i == 0) {\n              //noteOff = new NoteOffEvent({data: Utils.numberToVariableLength(tickDuration).concat(this.getNoteOffStatus(), Utils.getPitch(p), Utils.convertVelocity(this.velocity))});\n              var noteOffNew = new NoteOffEvent({\n                channel: _this.channel,\n                duration: _this.duration,\n                velocity: _this.velocity,\n                pitch: p,\n                noteOnTick: _this.startTick\n              });\n            } else {\n              // Running status (can ommit the note off status)\n              //noteOff = new NoteOffEvent({data: [0, Utils.getPitch(p), Utils.convertVelocity(this.velocity)]});\n              var noteOffNew = new NoteOffEvent({\n                channel: _this.channel,\n                duration: 0,\n                velocity: _this.velocity,\n                pitch: p,\n                noteOnTick: _this.startTick\n              });\n            }\n\n            _this.events.push(noteOffNew);\n          });\n        }\n      } else {\n        // Handle repeat\n        for (var j = 0; j < this.repeat; j++) {\n          this.pitch.forEach(function (p, i) {\n            // restDuration only applies to first note\n            if (i > 0) {\n              restDuration = 0;\n            } // If duration is 8th triplets we need to make sure that the total ticks == quarter note.\n            // So, the last one will need to be the remainder\n\n\n            if (_this.duration === '8t' && i == _this.pitch.length - 1) {\n              var quarterTicks = Utils$1.numberFromBytes(Constants.HEADER_CHUNK_DIVISION);\n              tickDuration = quarterTicks - tickDuration * 2;\n            }\n\n            var noteOnNew = new NoteOnEvent({\n              channel: _this.channel,\n              wait: i > 0 ? 0 : _this.wait,\n              // wait only applies to first note in repetition\n              velocity: _this.velocity,\n              pitch: p,\n              startTick: _this.startTick\n            });\n            var noteOffNew = new NoteOffEvent({\n              channel: _this.channel,\n              duration: _this.duration,\n              velocity: _this.velocity,\n              pitch: p,\n              noteOnTick: _this.startTick\n            });\n\n            _this.events.push(noteOnNew, noteOffNew);\n          });\n        }\n      }\n\n      return this;\n    }\n  }]);\n\n  return NoteEvent;\n}();\n\n/**\n * Holds all data for a \"program change\" MIDI event\n * @param {object} fields {instrument: integer}\n * @return {ProgramChangeEvent}\n */\n\nvar ProgramChangeEvent = function ProgramChangeEvent(fields) {\n  _classCallCheck(this, ProgramChangeEvent);\n\n  this.type = 'program'; // delta time defaults to 0.\n\n  this.data = Utils$1.numberToVariableLength(0x00).concat(Constants.PROGRAM_CHANGE_STATUS, fields.instrument);\n};\n\n/**\n * Object representation of a tempo meta event.\n * @param {string} text - Copyright text\n * @return {CopyrightEvent}\n */\n\nvar CopyrightEvent = function CopyrightEvent(text) {\n  _classCallCheck(this, CopyrightEvent);\n\n  this.type = 'copyright';\n  var textBytes = Utils$1.stringToBytes(text); // Start with zero time delta\n\n  this.data = Utils$1.numberToVariableLength(0x00).concat(Constants.META_EVENT_ID, Constants.META_COPYRIGHT_ID, Utils$1.numberToVariableLength(textBytes.length), // Size\n  textBytes // Text\n  );\n};\n\n/**\n * Object representation of a cue point meta event.\n * @param {string} text - Cue point text\n * @return {CuePointEvent}\n */\n\nvar CuePointEvent = function CuePointEvent(text) {\n  _classCallCheck(this, CuePointEvent);\n\n  this.type = 'marker';\n  var textBytes = Utils$1.stringToBytes(text); // Start with zero time delta\n\n  this.data = Utils$1.numberToVariableLength(0x00).concat(Constants.META_EVENT_ID, Constants.META_CUE_POINT, Utils$1.numberToVariableLength(textBytes.length), // Size\n  textBytes // Text\n  );\n};\n\n/**\n * Object representation of a end track meta event.\n * @return {EndTrackEvent}\n */\n\nvar EndTrackEvent = function EndTrackEvent() {\n  _classCallCheck(this, EndTrackEvent);\n\n  this.type = 'end-track'; // Start with zero time delta\n\n  this.data = Utils$1.numberToVariableLength(0x00).concat(Constants.META_EVENT_ID, Constants.META_END_OF_TRACK_ID);\n};\n\n/**\n * Object representation of an instrument name meta event.\n * @param {number} bpm - Beats per minute\n * @return {InstrumentNameEvent}\n */\n\nvar InstrumentNameEvent = function InstrumentNameEvent(text) {\n  _classCallCheck(this, InstrumentNameEvent);\n\n  this.type = 'instrument-name';\n  var textBytes = Utils$1.stringToBytes(text); // Start with zero time delta\n\n  this.data = Utils$1.numberToVariableLength(0x00).concat(Constants.META_EVENT_ID, Constants.META_INSTRUMENT_NAME_ID, Utils$1.numberToVariableLength(textBytes.length), // Size\n  textBytes // Instrument name\n  );\n};\n\n/**\n * Object representation of a key signature meta event.\n * @return {KeySignatureEvent}\n */\n\nvar KeySignatureEvent = function KeySignatureEvent(sf, mi) {\n  _classCallCheck(this, KeySignatureEvent);\n\n  this.type = 'key-signature';\n  var mode = mi || 0;\n  sf = sf || 0; //\tFunction called with string notation\n\n  if (typeof mi === 'undefined') {\n    var fifths = [['Cb', 'Gb', 'Db', 'Ab', 'Eb', 'Bb', 'F', 'C', 'G', 'D', 'A', 'E', 'B', 'F#', 'C#'], ['ab', 'eb', 'bb', 'f', 'c', 'g', 'd', 'a', 'e', 'b', 'f#', 'c#', 'g#', 'd#', 'a#']];\n    var _sflen = sf.length;\n    var note = sf || 'C';\n    if (sf[0] === sf[0].toLowerCase()) mode = 1;\n\n    if (_sflen > 1) {\n      switch (sf.charAt(_sflen - 1)) {\n        case 'm':\n          mode = 1;\n          note = sf.charAt(0).toLowerCase();\n          note = note.concat(sf.substring(1, _sflen - 1));\n          break;\n\n        case '-':\n          mode = 1;\n          note = sf.charAt(0).toLowerCase();\n          note = note.concat(sf.substring(1, _sflen - 1));\n          break;\n\n        case 'M':\n          mode = 0;\n          note = sf.charAt(0).toUpperCase();\n          note = note.concat(sf.substring(1, _sflen - 1));\n          break;\n\n        case '+':\n          mode = 0;\n          note = sf.charAt(0).toUpperCase();\n          note = note.concat(sf.substring(1, _sflen - 1));\n          break;\n      }\n    }\n\n    var fifthindex = fifths[mode].indexOf(note);\n    sf = fifthindex === -1 ? 0 : fifthindex - 7;\n  } // Start with zero time delta\n\n\n  this.data = Utils$1.numberToVariableLength(0x00).concat(Constants.META_EVENT_ID, Constants.META_KEY_SIGNATURE_ID, [0x02], // Size\n  Utils$1.numberToBytes(sf, 1), // Number of sharp or flats ( < 0 flat; > 0 sharp)\n  Utils$1.numberToBytes(mode, 1) // Mode: 0 major, 1 minor\n  );\n};\n\n/**\n * Object representation of a lyric meta event.\n * @param {string} text - Lyric text\n * @return {LyricEvent}\n */\n\nvar LyricEvent = function LyricEvent(text) {\n  _classCallCheck(this, LyricEvent);\n\n  this.type = 'marker';\n  var textBytes = Utils$1.stringToBytes(text); // Start with zero time delta\n\n  this.data = Utils$1.numberToVariableLength(0x00).concat(Constants.META_EVENT_ID, Constants.META_LYRIC_ID, Utils$1.numberToVariableLength(textBytes.length), // Size\n  textBytes // Text\n  );\n};\n\n/**\n * Object representation of a marker meta event.\n * @param {string} text - Marker text\n * @return {MarkerEvent}\n */\n\nvar MarkerEvent = function MarkerEvent(text) {\n  _classCallCheck(this, MarkerEvent);\n\n  this.type = 'marker';\n  var textBytes = Utils$1.stringToBytes(text); // Start with zero time delta\n\n  this.data = Utils$1.numberToVariableLength(0x00).concat(Constants.META_EVENT_ID, Constants.META_MARKER_ID, Utils$1.numberToVariableLength(textBytes.length), // Size\n  textBytes // Text\n  );\n};\n\n/**\n * Object representation of a tempo meta event.\n * @param {number} bpm - Beats per minute\n * @return {TempoEvent}\n */\n\nvar TempoEvent = function TempoEvent(bpm) {\n  _classCallCheck(this, TempoEvent);\n\n  this.type = 'tempo';\n  var tempo = Math.round(60000000 / bpm); // Start with zero time delta\n\n  this.data = Utils$1.numberToVariableLength(0x00).concat(Constants.META_EVENT_ID, Constants.META_TEMPO_ID, [0x03], // Size\n  Utils$1.numberToBytes(tempo, 3) // Tempo, 3 bytes\n  );\n};\n\n/**\n * Object representation of a tempo meta event.\n * @param {number} bpm - Beats per minute\n * @return {TextEvent}\n */\n\nvar TextEvent = function TextEvent(text) {\n  _classCallCheck(this, TextEvent);\n\n  this.type = 'text';\n  var textBytes = Utils$1.stringToBytes(text); // Start with zero time delta\n\n  this.data = Utils$1.numberToVariableLength(0x00).concat(Constants.META_EVENT_ID, Constants.META_TEXT_ID, Utils$1.numberToVariableLength(textBytes.length), // Size\n  textBytes // Text\n  );\n};\n\n/**\n * Object representation of a time signature meta event.\n * @return {TimeSignatureEvent}\n */\n\nvar TimeSignatureEvent = function TimeSignatureEvent(numerator, denominator, midiclockspertick, notespermidiclock) {\n  _classCallCheck(this, TimeSignatureEvent);\n\n  this.type = 'time-signature'; // Start with zero time delta\n\n  this.data = Utils$1.numberToVariableLength(0x00).concat(Constants.META_EVENT_ID, Constants.META_TIME_SIGNATURE_ID, [0x04], // Size\n  Utils$1.numberToBytes(numerator, 1), // Numerator, 1 bytes\n  Utils$1.numberToBytes(Math.log2(denominator), 1), // Denominator is expressed as pow of 2, 1 bytes\n  Utils$1.numberToBytes(midiclockspertick || 24, 1), // MIDI Clocks per tick, 1 bytes\n  Utils$1.numberToBytes(notespermidiclock || 8, 1) // Number of 1/32 notes per MIDI clocks, 1 bytes\n  );\n};\n\n/**\n * Object representation of a tempo meta event.\n * @param {number} bpm - Beats per minute\n * @return {TrackNameEvent}\n */\n\nvar TrackNameEvent = function TrackNameEvent(text) {\n  _classCallCheck(this, TrackNameEvent);\n\n  this.type = 'track-name';\n  var textBytes = Utils$1.stringToBytes(text); // Start with zero time delta\n\n  this.data = Utils$1.numberToVariableLength(0x00).concat(Constants.META_EVENT_ID, Constants.META_TRACK_NAME_ID, Utils$1.numberToVariableLength(textBytes.length), // Size\n  textBytes // Text\n  );\n};\n\n/**\n * Holds all data for a track.\n * @param {object} fields {type: number, data: array, size: array, events: array}\n * @return {Track}\n */\n\nvar Track =\n/*#__PURE__*/\nfunction () {\n  function Track() {\n    _classCallCheck(this, Track);\n\n    this.type = Constants.TRACK_CHUNK_TYPE;\n    this.data = [];\n    this.size = [];\n    this.events = [];\n    this.explicitTickEvents = []; // If there are any events with an explicit tick defined then we will create a \"sub\" track for those\n    // and merge them in and the end.\n\n    this.tickPointer = 0; // Each time an event is added this will increase\n  }\n  /**\n   * Adds any event type to the track.\n   * Events without a specific startTick property are assumed to be added in order of how they should output.\n   * Events with a specific startTick property are set aside for now will be merged in during build process.\n   * @param {(NoteEvent|ProgramChangeEvent)} events - Event object or array of Event objects.\n   * @param {function} mapFunction - Callback which can be used to apply specific properties to all events. \n   * @return {Track}\n   */\n\n\n  _createClass(Track, [{\n    key: \"addEvent\",\n    value: function addEvent(events, mapFunction) {\n      var _this = this;\n\n      Utils$1.toArray(events).forEach(function (event, i) {\n        if (event.type === 'note') {\n          // Handle map function if provided\n          if (typeof mapFunction === 'function') {\n            var properties = mapFunction(i, event);\n\n            if (_typeof(properties) === 'object') {\n              for (var j in properties) {\n                switch (j) {\n                  case 'duration':\n                    event.duration = properties[j];\n                    break;\n\n                  case 'sequential':\n                    event.sequential = properties[j];\n                    break;\n\n                  case 'velocity':\n                    event.velocity = Utils$1.convertVelocity(properties[j]);\n                    break;\n                }\n              }\n            }\n          } // If this note event has an explicit startTick then we need to set aside for now\n\n\n          if (event.startTick !== null) {\n            _this.explicitTickEvents.push(event);\n          } else {\n            // Push each on/off event to track's event stack\n            event.buildData().events.forEach(function (e) {\n              return _this.events.push(e);\n            });\n          }\n        } else {\n          _this.events.push(event);\n        }\n      });\n      return this;\n    }\n    /**\n     * Builds int array of all events.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"buildData\",\n    value: function buildData() {\n      var _this2 = this;\n\n      // Remove existing end track event and add one.\n      // This makes sure it's at the very end of the event list.\n      this.removeEventsByType('end-track').addEvent(new EndTrackEvent()); // Reset\n\n      this.data = [];\n      this.size = [];\n      this.tickPointer = 0;\n      this.events.forEach(function (event, eventIndex) {\n        // Build event & add to total tick duration\n        if (event.type === 'note-on' || event.type === 'note-off') {\n          _this2.data = _this2.data.concat(event.buildData(_this2).data);\n          _this2.tickPointer = event.tick;\n        } else {\n          _this2.data = _this2.data.concat(event.data);\n        }\n      });\n      this.mergeExplicitTickEvents();\n      this.size = Utils$1.numberToBytes(this.data.length, 4); // 4 bytes long\n\n      return this;\n    }\n  }, {\n    key: \"mergeExplicitTickEvents\",\n    value: function mergeExplicitTickEvents() {\n      var _this3 = this;\n\n      if (!this.explicitTickEvents.length) return; // First sort asc list of events by startTick\n\n      this.explicitTickEvents.sort(function (a, b) {\n        return a.startTick - b.startTick;\n      }); // Now this.explicitTickEvents is in correct order, and so is this.events naturally.\n      // For each explicit tick event, splice it into the main list of events and \n      // adjust the delta on the following events so they still play normally.\n\n      this.explicitTickEvents.forEach(function (noteEvent) {\n        // Convert NoteEvent to it's respective NoteOn/NoteOff events\n        // Note that as we splice in events the delta for the NoteOff ones will\n        // Need to change based on what comes before them after the splice.\n        noteEvent.buildData().events.forEach(function (e) {\n          return e.buildData(_this3);\n        }); // Merge each event indivually into this track's event list.\n\n        noteEvent.events.forEach(function (event) {\n          return _this3.mergeSingleEvent(event);\n        });\n      }); // Hacky way to rebuild track with newly spliced events.  Need better solution.\n\n      this.explicitTickEvents = [];\n      this.buildData();\n    }\n    /**\n     * Merges another track's events with this track.\n     * @param {Track} track\n     * @return {Track}\n     */\n\n  }, {\n    key: \"mergeTrack\",\n    value: function mergeTrack(track) {\n      var _this4 = this;\n\n      // First build this track to populate each event's tick property\n      this.buildData(); // Then build track to be merged so that tick property is populated on all events & merge each event.\n\n      track.buildData().events.forEach(function (event) {\n        return _this4.mergeSingleEvent(event);\n      });\n    }\n    /**\n     * Merges a single event into this track's list of events based on event.tick property.\n     * @param {NoteOnEvent|NoteOffEvent} - event\n     * @return {Track}\n     */\n\n  }, {\n    key: \"mergeSingleEvent\",\n    value: function mergeSingleEvent(event) {\n      // Find index of existing event we need to follow with \n      var lastEventIndex = 0;\n\n      for (var i = 0; i < this.events.length; i++) {\n        if (this.events[i].tick > event.tick) break;\n        lastEventIndex = i;\n      }\n\n      var splicedEventIndex = lastEventIndex + 1; // Need to adjust the delta of this event to ensure it falls on the correct tick.\n\n      event.delta = event.tick - this.events[lastEventIndex].tick; // Splice this event at lastEventIndex + 1\n\n      this.events.splice(splicedEventIndex, 0, event); // Now adjust delta of all following events\n\n      for (var i = splicedEventIndex + 1; i < this.events.length; i++) {\n        // Since each existing event should have a tick value at this point we just need to\n        // adjust delta to that the event still falls on the correct tick.\n        this.events[i].delta = this.events[i].tick - this.events[i - 1].tick;\n      }\n    }\n    /**\n     * Removes all events matching specified type.\n     * @param {string} eventType - Event type\n     * @return {Track}\n     */\n\n  }, {\n    key: \"removeEventsByType\",\n    value: function removeEventsByType(eventType) {\n      var _this5 = this;\n\n      this.events.forEach(function (event, index) {\n        if (event.type === eventType) {\n          _this5.events.splice(index, 1);\n        }\n      });\n      return this;\n    }\n    /**\n     * Sets tempo of the MIDI file.\n     * @param {number} bpm - Tempo in beats per minute.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"setTempo\",\n    value: function setTempo(bpm) {\n      return this.addEvent(new TempoEvent(bpm));\n    }\n    /**\n     * Sets time signature.\n     * @param {number} numerator - Top number of the time signature.\n     * @param {number} denominator - Bottom number of the time signature.\n     * @param {number} midiclockspertick - Defaults to 24.\n     * @param {number} notespermidiclock - Defaults to 8.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"setTimeSignature\",\n    value: function setTimeSignature(numerator, denominator, midiclockspertick, notespermidiclock) {\n      return this.addEvent(new TimeSignatureEvent(numerator, denominator, midiclockspertick, notespermidiclock));\n    }\n    /**\n     * Sets key signature.\n     * @param {*} sf - \n     * @param {*} mi -\n     * @return {Track}\n     */\n\n  }, {\n    key: \"setKeySignature\",\n    value: function setKeySignature(sf, mi) {\n      return this.addEvent(new KeySignatureEvent(sf, mi));\n    }\n    /**\n     * Adds text to MIDI file.\n     * @param {string} text - Text to add.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"addText\",\n    value: function addText(text) {\n      return this.addEvent(new TextEvent(text));\n    }\n    /**\n     * Adds copyright to MIDI file.\n     * @param {string} text - Text of copyright line.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"addCopyright\",\n    value: function addCopyright(text) {\n      return this.addEvent(new CopyrightEvent(text));\n    }\n    /**\n     * Adds Sequence/Track Name.\n     * @param {string} text - Text of track name.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"addTrackName\",\n    value: function addTrackName(text) {\n      return this.addEvent(new TrackNameEvent(text));\n    }\n    /**\n     * Sets instrument name of track.\n     * @param {string} text - Name of instrument.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"addInstrumentName\",\n    value: function addInstrumentName(text) {\n      return this.addEvent(new InstrumentNameEvent(text));\n    }\n    /**\n     * Adds marker to MIDI file.\n     * @param {string} text - Marker text.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"addMarker\",\n    value: function addMarker(text) {\n      return this.addEvent(new MarkerEvent(text));\n    }\n    /**\n     * Adds cue point to MIDI file.\n     * @param {string} text - Text of cue point.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"addCuePoint\",\n    value: function addCuePoint(text) {\n      return this.addEvent(new CuePointEvent(text));\n    }\n    /**\n     * Adds lyric to MIDI file.\n     * @param {string} text - Lyric text to add.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"addLyric\",\n    value: function addLyric(text) {\n      return this.addEvent(new LyricEvent(text));\n    }\n    /**\n     * Channel mode messages\n     * @return {Track}\n     */\n\n  }, {\n    key: \"polyModeOn\",\n    value: function polyModeOn() {\n      var event = new NoteOnEvent({\n        data: [0x00, 0xB0, 0x7E, 0x00]\n      });\n      return this.addEvent(event);\n    }\n  }]);\n\n  return Track;\n}();\n\nvar VexFlow =\n/*#__PURE__*/\nfunction () {\n  function VexFlow() {\n    _classCallCheck(this, VexFlow);\n  } // code...\n\n  /**\n   * Support for converting VexFlow voice into MidiWriterJS track\n   * @return MidiWritier.Track object\n   */\n\n\n  _createClass(VexFlow, [{\n    key: \"trackFromVoice\",\n    value: function trackFromVoice(voice) {\n      var _this = this;\n\n      var track = new Track();\n      var wait;\n      var pitches = [];\n      voice.tickables.forEach(function (tickable) {\n        pitches = [];\n\n        if (tickable.noteType === 'n') {\n          tickable.keys.forEach(function (key) {\n            // build array of pitches\n            pitches.push(_this.convertPitch(key));\n          });\n        } else if (tickable.noteType === 'r') {\n          // move on to the next tickable and use this rest as a `wait` property for the next event\n          wait = _this.convertDuration(tickable);\n          return;\n        }\n\n        track.addEvent(new NoteEvent({\n          pitch: pitches,\n          duration: _this.convertDuration(tickable),\n          wait: wait\n        })); // reset wait\n\n        wait = 0;\n      });\n      return track;\n    }\n    /**\n     * Converts VexFlow pitch syntax to MidiWriterJS syntax\n     * @param pitch string\n     */\n\n  }, {\n    key: \"convertPitch\",\n    value: function convertPitch(pitch) {\n      return pitch.replace('/', '');\n    }\n    /**\n     * Converts VexFlow duration syntax to MidiWriterJS syntax\n     * @param note struct from VexFlow\n     */\n\n  }, {\n    key: \"convertDuration\",\n    value: function convertDuration(note) {\n      switch (note.duration) {\n        case 'w':\n          return '1';\n\n        case 'h':\n          return note.isDotted() ? 'd2' : '2';\n\n        case 'q':\n          return note.isDotted() ? 'd4' : '4';\n\n        case '8':\n          return note.isDotted() ? 'd8' : '8';\n      }\n\n      return note.duration;\n    }\n  }]);\n\n  return VexFlow;\n}();\n\n/**\n * Object representation of a header chunk section of a MIDI file.\n * @param {number} numberOfTracks - Number of tracks\n * @return {HeaderChunk}\n */\n\nvar HeaderChunk = function HeaderChunk(numberOfTracks) {\n  _classCallCheck(this, HeaderChunk);\n\n  this.type = Constants.HEADER_CHUNK_TYPE;\n  var trackType = numberOfTracks > 1 ? Constants.HEADER_CHUNK_FORMAT1 : Constants.HEADER_CHUNK_FORMAT0;\n  this.data = trackType.concat(Utils$1.numberToBytes(numberOfTracks, 2), // two bytes long,\n  Constants.HEADER_CHUNK_DIVISION);\n  this.size = [0, 0, 0, this.data.length];\n};\n\n/**\n * Object that puts together tracks and provides methods for file output.\n * @param {array|Track} tracks - A single {Track} object or an array of {Track} objects.\n * @return {Writer}\n */\n\nvar Writer =\n/*#__PURE__*/\nfunction () {\n  function Writer(tracks) {\n    var _this = this;\n\n    _classCallCheck(this, Writer);\n\n    // Ensure track is an array\n    tracks = Utils$1.toArray(tracks);\n    this.data = [];\n    this.data.push(new HeaderChunk(tracks.length)); // For each track add final end of track event and build data\n\n    tracks.forEach(function (track, i) {\n      _this.data.push(track.buildData());\n    });\n  }\n  /**\n   * Builds the file into a Uint8Array\n   * @return {Uint8Array}\n   */\n\n\n  _createClass(Writer, [{\n    key: \"buildFile\",\n    value: function buildFile() {\n      var build = []; // Data consists of chunks which consists of data\n\n      this.data.forEach(function (d) {\n        return build = build.concat(d.type, d.size, d.data);\n      });\n      return new Uint8Array(build);\n    }\n    /**\n     * Convert file buffer to a base64 string.  Different methods depending on if browser or node.\n     * @return {string}\n     */\n\n  }, {\n    key: \"base64\",\n    value: function base64() {\n      if (typeof btoa === 'function') return btoa(String.fromCharCode.apply(null, this.buildFile()));\n      return Buffer.from(this.buildFile()).toString('base64');\n    }\n    /**\n     * Get the data URI.\n     * @return {string}\n     */\n\n  }, {\n    key: \"dataUri\",\n    value: function dataUri() {\n      return 'data:audio/midi;base64,' + this.base64();\n    }\n    /**\n     * Output to stdout\n     * @return {string}\n     */\n\n  }, {\n    key: \"stdout\",\n    value: function stdout() {\n      return process.stdout.write(new Buffer(this.buildFile()));\n    }\n    /**\n     * Save to MIDI file\n     * @param {string} filename\n     */\n\n  }, {\n    key: \"saveMIDI\",\n    value: function saveMIDI(filename) {\n      var fs = require('fs');\n\n      var buffer = new Buffer(this.buildFile());\n      fs.writeFile(filename + '.mid', buffer, function (err) {\n        if (err) throw err;\n      });\n    }\n  }]);\n\n  return Writer;\n}();\n\nvar main = {\n  Constants: Constants,\n  ControllerChangeEvent: ControllerChangeEvent,\n  NoteEvent: NoteEvent,\n  ProgramChangeEvent: ProgramChangeEvent,\n  Track: Track,\n  Utils: Utils$1,\n  VexFlow: VexFlow,\n  Writer: Writer\n};\n\nmodule.exports = main;\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = global || self, factory(global.fastUniqueNumbers = {}));\n}(this, function (exports) { 'use strict';\n\n    var LAST_NUMBER_WEAK_MAP = new WeakMap();\n    /*\n     * The value of the constant Number.MAX_SAFE_INTEGER equals (2 ** 53 - 1) but it\n     * is fairly new.\n     */\n\n    var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER === undefined ? 9007199254740991 : Number.MAX_SAFE_INTEGER;\n\n    var cache = function cache(collection, nextNumber) {\n      LAST_NUMBER_WEAK_MAP.set(collection, nextNumber);\n      return nextNumber;\n    };\n\n    var generateUniqueNumber = function generateUniqueNumber(collection) {\n      var lastNumber = LAST_NUMBER_WEAK_MAP.get(collection);\n      /*\n       * Let's try the cheapest algorithm first. It might fail to produce a new\n       * number, but it is so cheap that it is okay to take the risk. Just\n       * increase the last number by one or reset it to 0 if we reached the upper\n       * bound of SMIs (which stands for small integers). When the last number is\n       * unknown it is assumed that the collection contains zero based consecutive\n       * numbers.\n       */\n\n      var nextNumber = lastNumber === undefined ? collection.size : lastNumber > 2147483648 ? 0 : lastNumber + 1;\n\n      if (!collection.has(nextNumber)) {\n        return cache(collection, nextNumber);\n      }\n      /*\n       * If there are less than half of 2 ** 31 numbers stored in the collection,\n       * the chance to generate a new random number in the range from 0 to 2 ** 31\n       * is at least 50%. It's benifitial to use only SMIs because they perform\n       * much better in any environment based on V8.\n       */\n\n\n      if (collection.size < 1073741824) {\n        while (collection.has(nextNumber)) {\n          nextNumber = Math.floor(Math.random() * 2147483648);\n        }\n\n        return cache(collection, nextNumber);\n      } // Quickly check if there is a theoretical chance to generate a new number.\n\n\n      if (collection.size > MAX_SAFE_INTEGER) {\n        throw new Error('Congratulations, you created a collection of unique numbers which uses all available integers!');\n      } // Otherwise use the full scale of safely usable integers.\n\n\n      while (collection.has(nextNumber)) {\n        nextNumber = Math.floor(Math.random() * MAX_SAFE_INTEGER);\n      }\n\n      return cache(collection, nextNumber);\n    };\n\n    var addUniqueNumber = function addUniqueNumber(set) {\n      var number = generateUniqueNumber(set);\n      set.add(number);\n      return number;\n    };\n\n    exports.addUniqueNumber = addUniqueNumber;\n    exports.generateUniqueNumber = generateUniqueNumber;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","export const isMessagePort = (sender) => {\n    return (typeof sender.start === 'function');\n};\n//# sourceMappingURL=/build/es2018/guards/message-port.js.map","export const PORT_MAP = new WeakMap();\n//# sourceMappingURL=/build/es2018/helpers/port-map.js.map","import { generateUniqueNumber } from 'fast-unique-numbers';\nimport { isMessagePort } from './guards/message-port';\nimport { extendBrokerImplementation } from './helpers/extend-broker-implementation';\nconst ONGOING_REQUESTS = new WeakMap();\nconst createOrGetOngoingRequests = (sender) => {\n    if (ONGOING_REQUESTS.has(sender)) {\n        // @todo TypeScript needs to be convinced that has() works as expected.\n        return ONGOING_REQUESTS.get(sender);\n    }\n    const ongoingRequests = new Map();\n    ONGOING_REQUESTS.set(sender, ongoingRequests);\n    return ongoingRequests;\n};\nexport const createBroker = (brokerImplementation) => {\n    const fullBrokerImplementation = extendBrokerImplementation(brokerImplementation);\n    return (sender) => {\n        const ongoingRequests = createOrGetOngoingRequests(sender);\n        sender.addEventListener('message', (({ data: message }) => {\n            const { id } = message;\n            if (id !== null && ongoingRequests.has(id)) {\n                const { reject, resolve } = ongoingRequests.get(id);\n                ongoingRequests.delete(id);\n                if (message.error === undefined) {\n                    resolve(message.result);\n                }\n                else {\n                    reject(new Error(message.error.message));\n                }\n            }\n        }));\n        if (isMessagePort(sender)) {\n            sender.start();\n        }\n        const call = (method, params = null, transferables = []) => {\n            return new Promise((resolve, reject) => {\n                const id = generateUniqueNumber(ongoingRequests);\n                ongoingRequests.set(id, { reject, resolve });\n                if (params === null) {\n                    sender.postMessage({ id, method }, transferables);\n                }\n                else {\n                    sender.postMessage({ id, method, params }, transferables);\n                }\n            });\n        };\n        const notify = (method, params, transferables = []) => {\n            sender.postMessage({ id: null, method, params }, transferables);\n        };\n        let functions = {};\n        for (const [key, handler] of Object.entries(fullBrokerImplementation)) {\n            functions = Object.assign({}, functions, { [key]: handler({ call, notify }) });\n        }\n        return Object.assign({}, functions);\n    };\n};\n//# sourceMappingURL=/build/es2018/module.js.map","import { createBroker } from 'broker-factory';\nexport const wrap = createBroker({\n    parseArrayBuffer: ({ call }) => {\n        return async (arrayBuffer) => {\n            return call('parse', { arrayBuffer }, [arrayBuffer]);\n        };\n    }\n});\nexport const load = (url) => {\n    const worker = new Worker(url);\n    return wrap(worker);\n};\n//# sourceMappingURL=/build/es2018/module.js.map","import { PORT_MAP } from './port-map';\nexport const extendBrokerImplementation = (partialBrokerImplementation) => {\n    return Object.assign({}, partialBrokerImplementation, { connect: ({ call }) => {\n            return async () => {\n                const { port1, port2 } = new MessageChannel();\n                const portId = await call('connect', { port: port1 }, [port1]);\n                PORT_MAP.set(port2, portId);\n                return port2;\n            };\n        }, disconnect: ({ call }) => {\n            return async (port) => {\n                const portId = PORT_MAP.get(port);\n                if (portId === undefined) {\n                    throw new Error('The given port is not connected.');\n                }\n                await call('disconnect', { portId });\n            };\n        }, isSupported: ({ call }) => {\n            return () => call('isSupported');\n        } });\n};\n//# sourceMappingURL=/build/es2018/helpers/extend-broker-implementation.js.map","import { load } from 'midi-json-parser-broker';\nimport { worker } from './worker/worker';\nconst blob = new Blob([worker], { type: 'application/javascript; charset=utf-8' });\nconst url = URL.createObjectURL(blob);\nconst midiJsonParser = load(url);\nexport const connect = midiJsonParser.connect;\nexport const disconnect = midiJsonParser.disconnect;\nexport const isSupported = midiJsonParser.isSupported;\nexport const parseArrayBuffer = midiJsonParser.parseArrayBuffer;\nURL.revokeObjectURL(url);\n//# sourceMappingURL=/build/es2018/module.js.map","// tslint:disable-next-line:max-line-length\nexport const worker = `!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=8)}([function(e,t,n){!function(e,t,n,r){\"use strict\";t=t&&t.hasOwnProperty(\"default\")?t.default:t,n=n&&n.hasOwnProperty(\"default\")?n.default:n,r=r&&r.hasOwnProperty(\"default\")?r.default:r;var o=function(e,t){return void 0===t?e:t.reduce(function(e,t){if(\"capitalize\"===t){var o=e.charAt(0).toUpperCase(),i=e.slice(1);return\"\".concat(o).concat(i)}return\"dashify\"===t?n(e):\"prependIndefiniteArticle\"===t?\"\".concat(r(e),\" \").concat(e):e},e)},i=function(e,n){for(var r=/\\\\\\${([^.}]+)((\\\\.[^(]+\\\\(\\\\))*)}/g,i=[],a=r.exec(e);null!==a;){var s={modifiers:[],name:a[1]};if(void 0!==a[3])for(var c=/\\\\.[^(]+\\\\(\\\\)/g,u=c.exec(a[2]);null!==u;)s.modifiers.push(u[0].slice(1,-2)),u=c.exec(a[2]);i.push(s),a=r.exec(e)}var f=i.reduce(function(e,r){return e.map(function(e){return\"string\"==typeof e?e.split(function(e){var t=e.name+e.modifiers.map(function(e){return\"\\\\\\\\.\".concat(e,\"\\\\\\\\(\\\\\\\\)\")}).join(\"\");return new RegExp(\"\\\\\\\\$\\\\\\\\{\".concat(t,\"}\"),\"g\")}(r)).reduce(function(e,i,a){return 0===a?[i]:r.name in n?[].concat(t(e),[o(n[r.name],r.modifiers),i]):[].concat(t(e),[function(e){return o(e[r.name],r.modifiers)},i])},[]):[e]}).reduce(function(e,n){return[].concat(t(e),t(n))},[])},[e]);return function(e){return f.reduce(function(n,r){return[].concat(t(n),\"string\"==typeof r?[r]:[r(e)])},[]).join(\"\")}};e.compile=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=void 0===e.code?void 0:i(e.code,t),r=void 0===e.message?void 0:i(e.message,t);return function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},o=arguments.length>1?arguments[1]:void 0,i=void 0===o&&(t instanceof Error||void 0!==t.code&&\"Exception\"===t.code.slice(-9))?{cause:t,missingParameters:{}}:{cause:o,missingParameters:t},a=i.cause,s=i.missingParameters,c=void 0===r?new Error:new Error(r(s));return null!==a&&(c.cause=a),void 0!==n&&(c.code=n(s)),void 0!==e.status&&(c.status=e.status),c}},Object.defineProperty(e,\"__esModule\",{value:!0})}(t,n(2),n(6),n(7))},function(e,t,n){!function(e){\"use strict\";var t=new WeakMap,n=void 0===Number.MAX_SAFE_INTEGER?9007199254740991:Number.MAX_SAFE_INTEGER,r=function(e,n){return t.set(e,n),n},o=function(e){var o=t.get(e),i=void 0===o?e.size:o>2147483648?0:o+1;if(!e.has(i))return r(e,i);if(e.size<1073741824){for(;e.has(i);)i=Math.floor(2147483648*Math.random());return r(e,i)}if(e.size>n)throw new Error(\"Congratulations, you created a collection of unique numbers which uses all available integers!\");for(;e.has(i);)i=Math.floor(Math.random()*n);return r(e,i)};e.addUniqueNumber=function(e){var t=o(e);return e.add(t),t},e.generateUniqueNumber=o,Object.defineProperty(e,\"__esModule\",{value:!0})}(t)},function(e,t,n){var r=n(3),o=n(4),i=n(5);e.exports=function(e){return r(e)||o(e)||i()}},function(e,t){e.exports=function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}},function(e,t){e.exports=function(e){if(Symbol.iterator in Object(e)||\"[object Arguments]\"===Object.prototype.toString.call(e))return Array.from(e)}},function(e,t){e.exports=function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance\")}},function(e,t,n){\"use strict\";e.exports=((e,t)=>{if(\"string\"!=typeof e)throw new TypeError(\"expected a string\");return e.trim().replace(/([a-z])([A-Z])/g,\"$1-$2\").replace(/\\\\W/g,e=>/[À-ž]/.test(e)?e:\"-\").replace(/^-+|-+$/g,\"\").replace(/-{2,}/g,e=>t&&t.condense?\"-\":e).toLowerCase()})},function(e,t,n){var r=function(e){var t,n,r=/\\\\w+/.exec(e);if(!r)return\"an\";var o=(n=r[0]).toLowerCase(),i=[\"honest\",\"hour\",\"hono\"];for(t in i)if(0==o.indexOf(i[t]))return\"an\";if(1==o.length)return\"aedhilmnorsx\".indexOf(o)>=0?\"an\":\"a\";if(n.match(/(?!FJO|[HLMNS]Y.|RY[EO]|SQU|(F[LR]?|[HL]|MN?|N|RH?|S[CHKLMNPTVW]?|X(YL)?)[AEIOU])[FHLMNRSX][A-Z]/))return\"an\";var a=[/^e[uw]/,/^onc?e\\\\b/,/^uni([^nmd]|mo)/,/^u[bcfhjkqrst][aeiou]/];for(t=0;t<a.length;t++)if(o.match(a[t]))return\"a\";return n.match(/^U[NK][AIEO]/)?\"a\":n==n.toUpperCase()?\"aedhilmnorsx\".indexOf(o[0])>=0?\"an\":\"a\":\"aeiou\".indexOf(o[0])>=0?\"an\":o.match(/^y(b[lor]|cl[ea]|fere|gg|p[ios]|rou|tt)/)?\"an\":\"a\"};void 0!==e.exports?e.exports=r:window.indefiniteArticle=r},function(e,t,n){\"use strict\";n.r(t);var r=n(0);const o=-32603,i=-32602,a=-32601,s=Object(r.compile)({message:'The requested method called \"\\${method}\" is not supported.',status:a}),c=Object(r.compile)({message:'The handler of the method called \"\\${method}\" returned no required result.',status:o}),u=Object(r.compile)({message:'The handler of the method called \"\\${method}\" returned an unexpected result.',status:o}),f=Object(r.compile)({message:'The specified parameter called \"portId\" with the given value \"\\${portId}\" does not identify a port connected to this worker.',status:i});var l=n(1);const d=new Map,g=(e,t,n)=>Object.assign({},t,{connect:n=>{let r=n.port;r.start();const o=e(r,t),i=Object(l.generateUniqueNumber)(d);return d.set(i,()=>{o(),r.close(),d.delete(i)}),{result:i}},disconnect:e=>{let t=e.portId;const n=d.get(t);if(void 0===n)throw f({portId:t.toString()});return n(),{result:null}},isSupported:async()=>{if(await(()=>new Promise(e=>{const t=new ArrayBuffer(0),n=new MessageChannel,r=n.port1,o=n.port2;r.onmessage=(t=>{let n=t.data;return e(null!==n)}),o.postMessage(t,[t])}))()){const e=n();return{result:e instanceof Promise?await e:e}}return{result:!1}}}),m=e=>void 0!==e.channel,p=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e.byteLength-(t-e.byteOffset);const r=t+e.byteOffset,o=[],i=new Uint8Array(e.buffer,r,n);for(let e=0;e<n;e+=1){let t=i[e].toString(16).toUpperCase();1===t.length&&(t=0+t),o[e]=t}return o.join(\"\")},h=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e.byteLength-(t-e.byteOffset);const r=t+e.byteOffset,o=new Uint8Array(e.buffer,r,n);return String.fromCharCode.apply(null,o)},v=(e,t,n)=>{let r;const o=x(e,t),i=o.offset,a=o.value,s=e.getUint8(i);return r=240===s?U(e,i+1):255===s?b(e,i+1):w(s,e,i+1,n),Object.assign({},r,{event:Object.assign({},r.event,{delta:a}),eventTypeByte:s})},y=e=>{if(\"MThd\"!==h(e,0,4))throw new Error('Unexpected characters \"'.concat(h(e,0,4),'\" found instead of \"MThd\"'));if(6!==e.getUint32(4))throw new Error(\"The header has an unexpected length of \".concat(e.getUint32(4),\" instead of 6\"));const t=e.getUint16(8),n=e.getUint16(10);return{division:e.getUint16(12),format:t,numberOfTracks:n}},b=(e,t)=>{let n;const r=e.getUint8(t),o=x(e,t+1),i=o.offset,a=o.value;if(1===r)n={text:h(e,i,a)};else if(2===r)n={copyrightNotice:h(e,i,a)};else if(3===r)n={trackName:h(e,i,a)};else if(4===r)n={instrumentName:h(e,i,a)};else if(5===r)n={lyric:h(e,i,a)};else if(6===r)n={marker:h(e,i,a)};else if(32===r)n={channelPrefix:e.getUint8(i)};else if(33===r)n={midiPort:e.getUint8(i)};else if(47===r)n={endOfTrack:!0};else if(81===r)n={setTempo:{microsecondsPerBeat:(e.getUint8(i)<<16)+(e.getUint8(i+1)<<8)+e.getUint8(i+2)}};else if(84===r){let t;const r=e.getUint8(i);0==(96&r)?t=24:32==(96&r)?t=25:64==(96&r)?t=29:96==(96&r)&&(t=30),n={smpteOffset:{frame:e.getUint8(i+3),frameRate:t,hour:31&r,minutes:e.getUint8(i+1),seconds:e.getUint8(i+2),subFrame:e.getUint8(i+4)}}}else if(88===r)n={timeSignature:{denominator:Math.pow(2,e.getUint8(i+1)),metronome:e.getUint8(i+2),numerator:e.getUint8(i),thirtyseconds:e.getUint8(i+3)}};else if(89===r)n={keySignature:{key:e.getInt8(i),scale:e.getInt8(i+1)}};else{if(127!==r)throw new Error('Cannot parse a meta event with a type of \"'.concat(r.toString(16),'\"'));n={sequencerSpecificData:p(e,i,a)}}return{event:n,offset:i+a}},w=(e,t,n,r)=>{const o=0==(128&e)?r:null,i=(null===o?e:o)>>4;let a,s=null===o?n:n-1;if(8===i)a={noteOff:{noteNumber:t.getUint8(s),velocity:t.getUint8(s+1)}},s+=2;else if(9===i){const e=t.getUint8(s),n=t.getUint8(s+1);a=0===n?{noteOff:{noteNumber:e,velocity:n}}:{noteOn:{noteNumber:e,velocity:n}},s+=2}else if(11===i)a={controlChange:{type:t.getUint8(s),value:t.getUint8(s+1)}},s+=2;else if(12===i)a={programChange:{programNumber:t.getUint8(s)}},s+=1;else{if(14!==i)throw new Error('Cannot parse a midi event with a type of \"'.concat(i.toString(16),'\"'));a={pitchBend:t.getUint8(s)|t.getUint8(s+1)<<7},s+=2}return a.channel=15&(null===o?e:o),{event:a,offset:s}},U=(e,t)=>{const n=x(e,t),r=n.offset,o=n.value;return{event:{sysex:p(e,r,o)},offset:r+o}},O=(e,t)=>{if(\"MTrk\"!==h(e,t,4))throw new Error('Unexpected characters \"'.concat(h(e,t,4),'\" found instead of \"MTrk\"'));const n=[],r=e.getUint32(t+4)+t+8;let o=null,i=t+8;for(;i<r;){const t=v(e,i,o),r=t.event,a=t.eventTypeByte;n.push(r),i=t.offset,m(r)&&(128&a)>0&&(o=a)}return{offset:i,track:n}},x=(e,t)=>{let n=t,r=0;for(;;){const t=e.getUint8(n);if(n+=1,!(t>127))return{offset:n,value:r+=t};r+=127&t,r<<=7}};!function e(t,n){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:()=>!0;const o=g(e,n,r),i=((e,t)=>async n=>{let r=n.data,o=r.id,i=r.method,a=r.params;const f=t[i];try{if(void 0===f)throw s({method:i});const t=void 0===a?f():f(a);if(void 0===t)throw c({method:i});const n=t instanceof Promise?await t:t;if(null===o){if(void 0!==n.result)throw u({method:i})}else{if(void 0===n.result)throw u({method:i});const t=n.result,r=n.transferables,a=void 0===r?[]:r;e.postMessage({id:o,result:t},a)}}catch(t){const n=t.message,r=t.status,i=void 0===r?-32603:r;e.postMessage({error:{code:i,message:n},id:o})}})(t,o);return t.addEventListener(\"message\",i),()=>t.removeEventListener(\"message\",i)}(self,{parse:e=>{return{result:(e=>{const t=new DataView(e),n=y(t);let r=14;const o=[];for(let e=0,a=n.numberOfTracks;e<a;e+=1){let e;var i=O(t,r);r=i.offset,e=i.track,o.push(e)}return{division:n.division,format:n.format,tracks:o}})(e.arrayBuffer)}}})}]);`;\n//# sourceMappingURL=/build/es2018/worker/worker.js.map","import MidiWriter from \"midi-writer-js\";\r\nimport { parseArrayBuffer } from 'midi-json-parser';\r\nlet sampleInstruments = {\r\n    \"Synth\": {\r\n        midi: {\r\n            instrument: 2,\r\n            channel: 1\r\n        },\r\n        notes: [\r\n            'C3', 'C#3', 'D3', 'D#3', 'E3', 'F3', 'F#3', 'G3', 'G#3', 'A3', 'A#3', 'B3',\r\n            'C4', 'C#4', 'D4', 'D#4', 'E4', 'F4', 'F#4', 'G4'\r\n        ].reverse()\r\n    },\r\n    \"PlasticSynth\": {\r\n        midi: {\r\n            instrument: 1,\r\n            channel: 1\r\n        },\r\n        notes: [\r\n            'C3', 'C#3', 'D3', 'D#3', 'E3', 'F3', 'F#3', 'G3', 'G#3', 'A3', 'A#3', 'B3',\r\n            'C4', 'C#4', 'D4', 'D#4', 'E4', 'F4', 'F#4', 'G4', 'G#4', 'A4', 'A#4', 'B4',\r\n            'C5', 'C#5', 'D5', 'D#5', 'E5', 'F5', 'F#5', 'G5', 'G#5', 'A5', 'A#5', 'B5'\r\n        ].reverse()\r\n    },\r\n    \"DefaultDrumSynth\": {\r\n        midi: {\r\n            instrument: 1,\r\n            channel: 9,\r\n            keys: {\r\n                'kick': 'C2',\r\n                'bass': 'D#1',\r\n                'snare': 'D2',\r\n                'oh': 'G#2',\r\n                'ch': 'F#2'\r\n            }\r\n        },\r\n        notes: ['oh', 'ch', 'snare', 'kick', 'bass']\r\n    }\r\n};\r\nlet samplePlayData = { \"bpm\": 130, \"data\": [{ \"instName\": \"Synth\", \"trackIndex\": 0, \"supportMusicScore\": true, \"data\": [{}, {}, { \"0\": [\"C3\"], \"6\": [\"C4\"], \"12\": [\"F3\"], \"18\": [\"F4\"], \"24\": [\"C4\"], \"28\": [\"A#3\"] }, { \"0\": [\"C3\"], \"6\": [\"C4\"], \"12\": [\"F3\"], \"18\": [\"F4\"], \"22\": [\"D#4\"], \"24\": [\"C4\"], \"28\": [\"C4\"] }, { \"0\": [\"C3\"], \"3\": [\"C4\"], \"6\": [\"F3\"], \"12\": [\"D#3\"], \"16\": [\"C4\"], \"18\": [\"D#4\"], \"24\": [\"D#4\"], \"26\": [\"C4\"], \"28\": [\"C4\"], \"30\": [\"G3\"] }, { \"0\": [\"C3\"], \"3\": [\"D#3\"], \"6\": [\"C4\"], \"12\": [\"D#3\"], \"14\": [\"C4\"], \"18\": [\"D#4\"], \"24\": [\"A#3\"], \"28\": [\"C4\"] }, { \"0\": [\"F4\"], \"6\": [\"G4\"], \"8\": [\"D#4\"], \"12\": [\"F4\"], \"16\": [\"D#4\"], \"24\": [\"D#4\"], \"28\": [\"D#4\"] }, { \"0\": [\"C3\"], \"1\": [\"D#3\"], \"2\": [\"G3\"], \"4\": [\"D#3\"], \"6\": [\"F3\"], \"7\": [\"G3\"], \"12\": [\"D#3\"], \"14\": [\"F3\"], \"16\": [\"G3\"], \"18\": [\"C4\"], \"20\": [\"C4\"], \"22\": [\"D#4\"], \"24\": [\"D#3\"], \"27\": [\"D#3\"] }] }, { \"instName\": \"DefaultDrumSynth\", \"trackIndex\": 1, \"supportMusicScore\": true, \"musicScoreKeys\": { \"bass\": \"D/4\", \"kick\": \"F/4\", \"snare\": \"C/5\", \"ch\": \"G/5/X2\", \"oh\": \"G/5/X1\" }, \"data\": [{ \"0\": [\"kick\"], \"4\": [\"kick\"], \"8\": [\"kick\"], \"12\": [\"kick\"], \"16\": [\"kick\"], \"20\": [\"kick\"], \"24\": [\"kick\"], \"28\": [\"kick\"] }, { \"0\": [\"kick\"], \"4\": [\"snare\", \"kick\"], \"8\": [\"kick\"], \"12\": [\"snare\", \"kick\"], \"16\": [\"kick\"], \"20\": [\"snare\", \"kick\"], \"24\": [\"kick\"], \"28\": [\"snare\", \"kick\"] }, { \"0\": [\"ch\", \"kick\"], \"2\": [\"ch\", \"bass\"], \"4\": [\"ch\", \"snare\", \"kick\"], \"6\": [\"ch\", \"bass\"], \"8\": [\"ch\", \"kick\"], \"10\": [\"ch\", \"bass\"], \"12\": [\"ch\", \"snare\", \"kick\"], \"14\": [\"ch\", \"bass\"], \"16\": [\"ch\", \"kick\"], \"18\": [\"ch\", \"bass\"], \"20\": [\"ch\", \"snare\", \"kick\"], \"22\": [\"ch\", \"bass\"], \"24\": [\"ch\", \"kick\"], \"26\": [\"ch\", \"bass\"], \"28\": [\"ch\", \"snare\", \"kick\"], \"30\": [\"ch\", \"bass\"] }, { \"0\": [\"ch\", \"kick\"], \"2\": [\"ch\", \"bass\"], \"4\": [\"ch\", \"snare\", \"kick\"], \"6\": [\"ch\", \"bass\"], \"8\": [\"ch\", \"kick\"], \"10\": [\"ch\", \"bass\"], \"12\": [\"ch\", \"snare\", \"kick\"], \"14\": [\"ch\", \"bass\"], \"16\": [\"ch\", \"kick\"], \"18\": [\"ch\", \"bass\"], \"20\": [\"ch\", \"snare\", \"kick\"], \"22\": [\"ch\", \"bass\"], \"24\": [\"ch\", \"kick\"], \"26\": [\"ch\", \"bass\"], \"28\": [\"ch\", \"snare\", \"kick\"], \"30\": [\"ch\", \"bass\"] }, { \"0\": [\"ch\", \"kick\"], \"2\": [\"ch\", \"bass\"], \"4\": [\"ch\", \"snare\", \"kick\"], \"6\": [\"ch\", \"bass\"], \"8\": [\"ch\", \"kick\"], \"10\": [\"ch\", \"bass\"], \"12\": [\"ch\", \"snare\", \"kick\"], \"14\": [\"ch\", \"bass\"], \"16\": [\"ch\", \"kick\"], \"18\": [\"ch\", \"bass\"], \"20\": [\"ch\", \"snare\", \"kick\"], \"22\": [\"ch\", \"bass\"], \"24\": [\"ch\", \"kick\"], \"26\": [\"ch\", \"bass\"], \"28\": [\"ch\", \"snare\", \"kick\"], \"30\": [\"ch\", \"bass\"] }, { \"0\": [\"ch\", \"kick\"], \"1\": [\"kick\"], \"2\": [\"ch\", \"bass\"], \"4\": [\"ch\", \"snare\", \"kick\"], \"5\": [\"ch\"], \"6\": [\"ch\", \"bass\"], \"7\": [\"snare\", \"bass\"], \"8\": [\"ch\", \"kick\"], \"10\": [\"ch\", \"bass\"], \"12\": [\"ch\", \"snare\", \"kick\"], \"13\": [\"ch\", \"kick\"], \"14\": [\"ch\", \"bass\"], \"16\": [\"ch\", \"kick\"], \"18\": [\"ch\", \"bass\"], \"19\": [\"bass\"], \"20\": [\"ch\", \"snare\", \"kick\"], \"21\": [\"ch\", \"kick\"], \"22\": [\"ch\", \"bass\"], \"23\": [\"snare\"], \"24\": [\"ch\", \"kick\"], \"25\": [\"snare\"], \"26\": [\"ch\", \"bass\"], \"28\": [\"ch\", \"snare\", \"kick\"], \"29\": [\"ch\"], \"30\": [\"ch\", \"bass\"] }, { \"0\": [\"ch\", \"kick\"], \"1\": [\"kick\"], \"2\": [\"ch\", \"bass\"], \"4\": [\"ch\", \"snare\", \"kick\"], \"5\": [\"ch\"], \"6\": [\"ch\", \"bass\"], \"7\": [\"snare\", \"bass\"], \"8\": [\"ch\", \"kick\"], \"10\": [\"ch\", \"bass\"], \"12\": [\"ch\", \"snare\", \"kick\"], \"13\": [\"ch\", \"kick\"], \"14\": [\"ch\", \"bass\"], \"16\": [\"ch\", \"kick\"], \"18\": [\"ch\", \"bass\"], \"19\": [\"bass\"], \"20\": [\"ch\", \"snare\", \"kick\"], \"21\": [\"ch\", \"kick\"], \"22\": [\"ch\", \"bass\"], \"23\": [\"snare\"], \"24\": [\"ch\", \"kick\"], \"25\": [\"snare\"], \"26\": [\"ch\", \"bass\"], \"28\": [\"ch\", \"snare\", \"kick\"], \"29\": [\"ch\"], \"30\": [\"ch\", \"bass\"] }, { \"0\": [\"ch\", \"kick\"], \"1\": [\"kick\"], \"2\": [\"ch\", \"bass\"], \"4\": [\"ch\", \"snare\", \"kick\"], \"5\": [\"ch\"], \"6\": [\"ch\", \"bass\"], \"7\": [\"snare\", \"bass\"], \"8\": [\"ch\", \"kick\"], \"10\": [\"ch\", \"bass\"], \"12\": [\"ch\", \"snare\", \"kick\"], \"13\": [\"ch\", \"kick\"], \"14\": [\"ch\", \"bass\"], \"16\": [\"ch\", \"kick\"], \"18\": [\"ch\", \"bass\"], \"19\": [\"bass\"], \"20\": [\"ch\", \"snare\", \"kick\"], \"21\": [\"ch\", \"kick\"], \"22\": [\"ch\", \"bass\"], \"23\": [\"snare\"], \"24\": [\"ch\", \"kick\"], \"25\": [\"snare\"], \"26\": [\"ch\", \"bass\"], \"28\": [\"ch\", \"snare\", \"kick\"], \"29\": [\"ch\"], \"30\": [\"ch\", \"bass\"] }] }] };\r\nfunction build(playData, instrumentInfos) {\r\n    let tracks = [];\r\n    console.log(\"\\t building... playData\", playData);\r\n    playData.data.forEach((trackData, k) => {\r\n        let notes = [];\r\n        let track = new MidiWriter.Track();\r\n        track.setTempo(playData.bpm);\r\n        let restSum = [];\r\n        let channel;\r\n        let convert;\r\n        if (instrumentInfos[trackData.instName] && instrumentInfos[trackData.instName].midi) {\r\n            channel = instrumentInfos[trackData.instName].midi.channel;\r\n            if (instrumentInfos[trackData.instName].midi.keys) {\r\n                convert = (note) => {\r\n                    return instrumentInfos[trackData.instName].midi.keys[note];\r\n                };\r\n            }\r\n            if (typeof instrumentInfos[trackData.instName].midi.instrument !== \"undefined\") {\r\n                track.addEvent(new MidiWriter.ProgramChangeEvent({ instrument: instrumentInfos[trackData.instName].midi.instrument }));\r\n            }\r\n        }\r\n        else {\r\n            channel = 1;\r\n        }\r\n        trackData.data.forEach((node, ni) => {\r\n            let isEmptyNode = true;\r\n            for (let o in node) {\r\n                isEmptyNode = false;\r\n                break;\r\n            }\r\n            if (isEmptyNode) {\r\n                restSum.push(1, 1);\r\n            }\r\n            else {\r\n                for (let i = 0; i < 32; i++) {\r\n                    if (node[i]) {\r\n                        console.log(\"\\t building... track:\", tracks.length, \"channel:\", channel);\r\n                        notes.push(new MidiWriter.NoteEvent({ pitch: convert ? node[i].map(convert) : node[i], duration: '16', wait: restSum, velocity: 100, channel: channel }));\r\n                        restSum = [];\r\n                    }\r\n                    else {\r\n                        restSum.push(16);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        track.addEvent(notes);\r\n        tracks.push(track);\r\n    });\r\n    return new MidiWriter.Writer(tracks);\r\n}\r\nfunction exportBlob(playData, instrumentInfos) {\r\n    return new Blob([build(playData, instrumentInfos).buildFile()], { type: \"audio/midi\" });\r\n}\r\nlet downloadTempTag;\r\nfunction downloadMidi(blob) {\r\n    if (!downloadTempTag) {\r\n        downloadTempTag = document.createElement('a');\r\n    }\r\n    downloadTempTag.href = URL.createObjectURL(blob);\r\n    downloadTempTag.download = new Date().toISOString() + '.mid';\r\n    downloadTempTag.innerHTML = downloadTempTag.download;\r\n    downloadTempTag.click();\r\n    URL.revokeObjectURL(downloadTempTag.href);\r\n}\r\nfunction blobToArrayBuffer(blob, done) {\r\n    let reader = new FileReader();\r\n    reader.readAsArrayBuffer(blob);\r\n    reader.onloadend = function () {\r\n        done(reader.result);\r\n    };\r\n}\r\nfunction test1(done) {\r\n    console.error(\"----------------start test1---------------\");\r\n    console.error(\"set channel to 9\");\r\n    sampleInstruments.DefaultDrumSynth.midi.channel = 9;\r\n    console.error(\"build blob\");\r\n    let blob = exportBlob(samplePlayData, sampleInstruments);\r\n    console.error(\"parse midi\");\r\n    blobToArrayBuffer(blob, arrayBuffer => {\r\n        parseArrayBuffer(arrayBuffer).then(json => {\r\n            console.log(\"midi data:\", json);\r\n            console.log(\"track1, check channel!!\", json.tracks[0][1]);\r\n            console.log(\"track2, check channel!!\", json.tracks[1][2]);\r\n            done(json);\r\n        });\r\n    });\r\n    console.error(\"Listen to the downloaded midi file and check the drum part.\");\r\n    downloadMidi(blob);\r\n}\r\nfunction test2(done) {\r\n    console.error(\"----------------start test2---------------\");\r\n    console.error(\"set channel to 10\");\r\n    sampleInstruments.DefaultDrumSynth.midi.channel = 10;\r\n    console.error(\"build blob\");\r\n    let blob = exportBlob(samplePlayData, sampleInstruments);\r\n    console.error(\"parse midi\");\r\n    blobToArrayBuffer(blob, arrayBuffer => {\r\n        parseArrayBuffer(arrayBuffer).then(json => {\r\n            console.log(\"midi data:\", json);\r\n            console.log(\"track1, check channel!!\", json.tracks[0][1]);\r\n            console.log(\"track2, check channel!!\", json.tracks[1][2]);\r\n            done(json);\r\n        });\r\n    });\r\n    console.error(\"Listen to the downloaded midi file and check the drum part.\");\r\n    downloadMidi(blob);\r\n}\r\nexport { test1, test2 };\r\n","'use strict'\n\n// util\nfunction fillStr (s, num) { return Array(num + 1).join(s) }\nfunction isNum (x) { return typeof x === 'number' }\nfunction isStr (x) { return typeof x === 'string' }\nfunction isDef (x) { return typeof x !== 'undefined' }\nfunction midiToFreq (midi, tuning) {\n  return Math.pow(2, (midi - 69) / 12) * (tuning || 440)\n}\n\nvar REGEX = /^([a-gA-G])(#{1,}|b{1,}|x{1,}|)(-?\\d*)\\s*(.*)\\s*$/\n/**\n * A regex for matching note strings in scientific notation.\n *\n * @name regex\n * @function\n * @return {RegExp} the regexp used to parse the note name\n *\n * The note string should have the form `letter[accidentals][octave][element]`\n * where:\n *\n * - letter: (Required) is a letter from A to G either upper or lower case\n * - accidentals: (Optional) can be one or more `b` (flats), `#` (sharps) or `x` (double sharps).\n * They can NOT be mixed.\n * - octave: (Optional) a positive or negative integer\n * - element: (Optional) additionally anything after the duration is considered to\n * be the element name (for example: 'C2 dorian')\n *\n * The executed regex contains (by array index):\n *\n * - 0: the complete string\n * - 1: the note letter\n * - 2: the optional accidentals\n * - 3: the optional octave\n * - 4: the rest of the string (trimmed)\n *\n * @example\n * var parser = require('note-parser')\n * parser.regex.exec('c#4')\n * // => ['c#4', 'c', '#', '4', '']\n * parser.regex.exec('c#4 major')\n * // => ['c#4major', 'c', '#', '4', 'major']\n * parser.regex().exec('CMaj7')\n * // => ['CMaj7', 'C', '', '', 'Maj7']\n */\nexport function regex () { return REGEX }\n\nvar SEMITONES = [0, 2, 4, 5, 7, 9, 11]\n/**\n * Parse a note name in scientific notation an return it's components,\n * and some numeric properties including midi number and frequency.\n *\n * @name parse\n * @function\n * @param {String} note - the note string to be parsed\n * @param {Boolean} isTonic - true the strings it's supposed to contain a note number\n * and some category (for example an scale: 'C# major'). It's false by default,\n * but when true, en extra tonicOf property is returned with the category ('major')\n * @param {Float} tunning - The frequency of A4 note to calculate frequencies.\n * By default it 440.\n * @return {Object} the parsed note name or null if not a valid note\n *\n * The parsed note name object will ALWAYS contains:\n * - letter: the uppercase letter of the note\n * - acc: the accidentals of the note (only sharps or flats)\n * - pc: the pitch class (letter + acc)\n * - step: s a numeric representation of the letter. It's an integer from 0 to 6\n * where 0 = C, 1 = D ... 6 = B\n * - alt: a numeric representation of the accidentals. 0 means no alteration,\n * positive numbers are for sharps and negative for flats\n * - chroma: a numeric representation of the pitch class. It's like midi for\n * pitch classes. 0 = C, 1 = C#, 2 = D ... 11 = B. Can be used to find enharmonics\n * since, for example, chroma of 'Cb' and 'B' are both 11\n *\n * If the note has octave, the parser object will contain:\n * - oct: the octave number (as integer)\n * - midi: the midi number\n * - freq: the frequency (using tuning parameter as base)\n *\n * If the parameter `isTonic` is set to true, the parsed object will contain:\n * - tonicOf: the rest of the string that follows note name (left and right trimmed)\n *\n * @example\n * var parse = require('note-parser').parse\n * parse('Cb4')\n * // => { letter: 'C', acc: 'b', pc: 'Cb', step: 0, alt: -1, chroma: -1,\n *         oct: 4, midi: 59, freq: 246.94165062806206 }\n * // if no octave, no midi, no freq\n * parse('fx')\n * // => { letter: 'F', acc: '##', pc: 'F##', step: 3, alt: 2, chroma: 7 })\n */\nexport function parse (str, isTonic, tuning) {\n  if (typeof str !== 'string') return null\n  var m = REGEX.exec(str)\n  if (!m || (!isTonic && m[4])) return null\n\n  var p = { letter: m[1].toUpperCase(), acc: m[2].replace(/x/g, '##') }\n  p.pc = p.letter + p.acc\n  p.step = (p.letter.charCodeAt(0) + 3) % 7\n  p.alt = p.acc[0] === 'b' ? -p.acc.length : p.acc.length\n  var pos = SEMITONES[p.step] + p.alt\n  p.chroma = pos < 0 ? 12 + pos : pos % 12\n  if (m[3]) { // has octave\n    p.oct = +m[3]\n    p.midi = pos + 12 * (p.oct + 1)\n    p.freq = midiToFreq(p.midi, tuning)\n  }\n  if (isTonic) p.tonicOf = m[4]\n  return p\n}\n\nvar LETTERS = 'CDEFGAB'\nfunction accStr (n) { return !isNum(n) ? '' : n < 0 ? fillStr('b', -n) : fillStr('#', n) }\nfunction octStr (n) { return !isNum(n) ? '' : '' + n }\n\n/**\n * Create a string from a parsed object or `step, alteration, octave` parameters\n * @param {Object} obj - the parsed data object\n * @return {String} a note string or null if not valid parameters\n * @since 1.2\n * @example\n * parser.build(parser.parse('cb2')) // => 'Cb2'\n *\n * @example\n * // it accepts (step, alteration, octave) parameters:\n * parser.build(3) // => 'F'\n * parser.build(3, -1) // => 'Fb'\n * parser.build(3, -1, 4) // => 'Fb4'\n */\nexport function build (s, a, o) {\n  if (s === null || typeof s === 'undefined') return null\n  if (s.step) return build(s.step, s.alt, s.oct)\n  if (s < 0 || s > 6) return null\n  return LETTERS.charAt(s) + accStr(a) + octStr(o)\n}\n\n/**\n * Get midi of a note\n *\n * @name midi\n * @function\n * @param {String|Integer} note - the note name or midi number\n * @return {Integer} the midi number of the note or null if not a valid note\n * or the note does NOT contains octave\n * @example\n * var parser = require('note-parser')\n * parser.midi('A4') // => 69\n * parser.midi('A') // => null\n * @example\n * // midi numbers are bypassed (even as strings)\n * parser.midi(60) // => 60\n * parser.midi('60') // => 60\n */\nexport function midi (note) {\n  if ((isNum(note) || isStr(note)) && note >= 0 && note < 128) return +note\n  var p = parse(note)\n  return p && isDef(p.midi) ? p.midi : null\n}\n\n/**\n * Get freq of a note in hertzs (in a well tempered 440Hz A4)\n *\n * @name freq\n * @function\n * @param {String} note - the note name or note midi number\n * @param {String} tuning - (Optional) the A4 frequency (440 by default)\n * @return {Float} the freq of the number if hertzs or null if not valid note\n * @example\n * var parser = require('note-parser')\n * parser.freq('A4') // => 440\n * parser.freq('A') // => null\n * @example\n * // can change tuning (440 by default)\n * parser.freq('A4', 444) // => 444\n * parser.freq('A3', 444) // => 222\n * @example\n * // it accepts midi numbers (as numbers and as strings)\n * parser.freq(69) // => 440\n * parser.freq('69', 442) // => 442\n */\nexport function freq (note, tuning) {\n  var m = midi(note)\n  return m === null ? null : midiToFreq(m, tuning)\n}\n\nexport function letter (src) { return (parse(src) || {}).letter }\nexport function acc (src) { return (parse(src) || {}).acc }\nexport function pc (src) { return (parse(src) || {}).pc }\nexport function step (src) { return (parse(src) || {}).step }\nexport function alt (src) { return (parse(src) || {}).alt }\nexport function chroma (src) { return (parse(src) || {}).chroma }\nexport function oct (src) { return (parse(src) || {}).oct }\n","/**\n * A midi note number is a number representation of a note pitch. It can be\n * integers so it's equal tempered tuned, or float to indicate it's not\n * tuned into equal temepered scale.\n *\n * This module contains functions to convert to and from midi notes.\n *\n * @example\n * var midi = require('tonal-midi')\n * midi.toMidi('A4') // => 69\n * midi.note(69) // => 'A4'\n * midi.note(61) // => 'Db4'\n * midi.note(61, true) // => 'C#4'\n *\n * @module midi\n */\n\nimport { midi } from 'note-parser'\n\n/**\n * Convert the given note to a midi note number. If you pass a midi number it\n * will returned as is.\n *\n * @param {Array|String|Number} note - the note to get the midi number from\n * @return {Integer} the midi number or null if not valid pitch\n * @example\n * midi.toMidi('C4') // => 60\n * midi.toMidi(60) // => 60\n * midi.toMidi('60') // => 60\n */\nexport function toMidi (val) {\n  if (Array.isArray(val) && val.length === 2) return val[0] * 7 + val[1] * 12 + 12\n  return midi(val)\n}\n\nvar FLATS = 'C Db D Eb E F Gb G Ab A Bb B'.split(' ')\nvar SHARPS = 'C C# D D# E F F# G G# A A# B'.split(' ')\n\n/**\n * Given a midi number, returns a note name. The altered notes will have\n * flats unless explicitly set with the optional `useSharps` parameter.\n *\n * @function\n * @param {Integer} midi - the midi note number\n * @param {Boolean} useSharps - (Optional) set to true to use sharps instead of flats\n * @return {String} the note name\n * @example\n * var midi = require('tonal-midi')\n * midi.note(61) // => 'Db4'\n * midi.note(61, true) // => 'C#4'\n * // it rounds to nearest note\n * midi.note(61.7) // => 'D4'\n */\nexport function note (num, sharps) {\n  if (num === true || num === false) return function (m) { return note(m, num) }\n  num = Math.round(num)\n  var pcs = sharps === true ? SHARPS : FLATS\n  var pc = pcs[num % 12]\n  var o = Math.floor(num / 12) - 1\n  return pc + o\n}\n"],"sourceRoot":""}